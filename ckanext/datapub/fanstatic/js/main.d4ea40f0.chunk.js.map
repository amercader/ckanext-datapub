{"version":3,"sources":["../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","components/SelectSchema/index.js","components/Metadata/index.jsx","App.js","utils/index.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","SelectSchema","resources","onSchemaSelected","client","useState","selectedSchema","setSelectedSchema","onChangeHandlder","event","a","resourceId","target","value","className","onChange","index","name","schema","key","disabled","customFields","label","input_type","values","options","Metadata","metadata","handleChange","path","htmlFor","type","title","description","encoding","required","encodeData","item","format","toLowerCase","formatData","option","ResourceEditor","props","handleChangeMetadata","resourceCopy","state","resource","setState","handleSubmitMetadata","createResource","action","datasetId","datasetMetadata","result","window","location","href","config","organizationId","ckanResource","frictionlessCkanMapper","resourceFrictionlessToCkan","data","sample","bqTableName","bq_table_name","uuidv4","ckanResourceCopy","package_id","sha256","hash","size","lfs_prefix","url","url_type","replace","then","response","onChangeResourceId","deleteResource","confirm","setLoading","isLoading","ui","loading","handleUploadStatus","status","newUiState","success","error","getSchemaWithSample","resourceSchema","resourceSample","fields","property","push","console","setResource","isResourceEdit","fileOrLink","uploadComplete","undefined","metadataHandler","bind","this","authToken","api","lfs","Client","onSubmit","preventDefault","onClick","React","Component","defaultProps","element","document","getElementById","getAttribute","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d4ea40f0.chunk.js","sourcesContent":["var map = {\n\t\"./geojson.json\": 272,\n\t\"./table-schema.json\": 618,\n\t\"./topojson.json\": 273\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 617;","import React, { useState } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nconst SelectSchema = ({ resources, client, onSchemaSelected }) => {\n  const [selectedSchema, setSelectedSchema] = useState(\"\");\n\n  const onChangeHandlder = async (event) => {\n    const resourceId = event.target.value;\n    setSelectedSchema(event.target.value);\n    onSchemaSelected(resourceId);\n  };\n  return (\n    <div className=\"app-form-field\">\n      <label className=\"metadata-label\">\n        Copy schema from existing resource\n      </label>\n      <select\n        className=\"app-form-field-input\"\n        value={selectedSchema}\n        onChange={onChangeHandlder}\n      >\n        <option value=\"\">Select...</option>\n        {resources.map(({ name, schema, id }, index) => {\n          return (\n            <option\n              key={`select-schema-option-${id}-${index}`}\n              value={id}\n              disabled={!schema}\n            >\n              {name} {!schema ? \"(no schema to copy)\" : \"\"}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nSelectSchema.propTypes = {\n  resources: PropTypes.array.isRequired,\n  onSchemaSelected: PropTypes.func.isRequired,\n};\n\nexport default SelectSchema;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Metadata.css\";\nimport { encodeData, formatData } from \"datapub\";\n\n//TODO: add the custom fields as a props and render it in metadata component\nconst customFields = [\n  {\n    label: \"Access Restriction\",\n    name: \"restricted\",\n    input_type: \"select\",\n    values: ['{\"level\": \"public\"}', '{\"level\": \"private\"}'],\n    options: [\"Public\", \"Private\"],\n  },\n];\n\nconst Metadata = ({ metadata, handleChange }) => {\n  return (\n    <>\n      <h3 className=\"metadata-name\">{metadata.path}</h3>\n      <div className=\"metadata-form\">\n        <div className=\"metadata-input\">\n          <label className=\"metadata-label\" htmlFor=\"title\">\n            Title:\n          </label>\n          <input\n            className=\"metadata-input__input\"\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            value={metadata.title || metadata.name}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"metadata-input\">\n          <label className=\"metadata-label\" htmlFor=\"description\">\n            Description:\n          </label>\n          <input\n            className=\"metadata-input__input\"\n            type=\"text\"\n            name=\"description\"\n            id=\"description\"\n            value={metadata.description || \"\"}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"metadata-input\">\n          <label className=\"metadata-label\" htmlFor=\"encoding\">\n            Encoding:\n          </label>\n          <select\n            className=\"metadata-input__input\"\n            name=\"encoding\"\n            id=\"encoding\"\n            value={metadata.encoding || \"\"}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\" disabled>\n              Select...\n            </option>\n            {encodeData.map((item) => (\n              <option key={`format-${item.value}`} value={item.value}>\n                {item.label}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"metadata-input\">\n          <label className=\"metadata-label\" htmlFor=\"format\">\n            Format:\n          </label>\n          <select\n            className=\"metadata-input__input\"\n            name=\"format\"\n            id=\"format\"\n            value={(metadata.format || \"\").toLowerCase()}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\" disabled>\n              Select...\n            </option>\n            {formatData.map((item) => (\n              <option key={`format-${item[0]}`} value={item[0].toLowerCase()}>\n                {item[0]}\n              </option>\n            ))}\n          </select>\n        </div>\n        {customFields &&\n          customFields.map((item) => (\n            <div\n              key={`metadata-custom-${item.name}`}\n              className=\"metadata-input\"\n            >\n              <label className=\"metadata-label\" htmlFor=\"format\">\n                {item.label}:\n              </label>\n              <select\n                className=\"metadata-input__input\"\n                name={item.name}\n                id={item.name}\n                value={metadata[item.name] || \"\"}\n                onChange={handleChange}\n                required\n              >\n                <option value=\"\" disabled>\n                  Select...\n                </option>\n                {item.options.map((option, index) => (\n                  <option\n                    key={`${item.name}-${index}`}\n                    value={item.values[index]}\n                  >\n                    {option}\n                  </option>\n                ))}\n              </select>\n            </div>\n          ))}\n      </div>\n    </>\n  );\n};\n\nMetadata.propTypes = {\n  metadata: PropTypes.object.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Metadata;\n","import React from \"react\";\nimport { Client } from \"ckanClient\";\nimport PropTypes from \"prop-types\";\nimport frictionlessCkanMapper from \"frictionless-ckan-mapper-js\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Upload, TableSchema } from \"datapub\";\nimport SelectSchema from \"./components/SelectSchema\";\nimport Metadata from \"./components/Metadata\";\nimport \"./App.css\";\nimport { removeHyphen } from \"./utils\";\n\nexport class ResourceEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resources: [],\n      datasetId: this.props.config.datasetId,\n      resourceId: \"\",\n      resource: this.props.resource || {},\n      ui: {\n        fileOrLink: \"\",\n        uploadComplete: undefined,\n        success: false,\n        error: false,\n        loading: false,\n      },\n      client: null,\n      isResourceEdit: false,\n    };\n    this.metadataHandler = this.metadataHandler.bind(this);\n  }\n\n  async componentDidMount() {\n    const { config } = this.props;\n    const {\n      authToken,\n      api,\n      lfs,\n      organizationId,\n      datasetId,\n      resourceId,\n    } = config;\n\n    const client = new Client(\n      `${authToken}`,\n      `${organizationId}`,\n      `${datasetId}`,\n      `${api}`,\n      `${lfs}`\n    );\n\n    // get dataset\n    const { result } = await client.action(\"package_show\", {\n      id: datasetId,\n    });\n\n    const resources = result.resources || [];\n\n    this.setState({ client, resources });\n\n    //Check if the user is editing resource\n    if (resourceId) {\n      this.setResource(resourceId);\n    }\n  }\n\n  metadataHandler(resource) {\n    this.setState({\n      resource,\n    });\n  }\n\n  handleChangeMetadata = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let resourceCopy = this.state.resource;\n    resourceCopy[name] = value;\n\n    this.setState({\n      resource: resourceCopy,\n    });\n  };\n\n  handleSubmitMetadata = async () => {\n    const { resource, client } = this.state;\n\n    await this.createResource(resource);\n\n    // Change state of dataset to active if draft atm\n    // this relates to how CKAN v2 has a phased dataset creation. See e.g.\n    // https://github.com/ckan/ckan/blob/master/ckan/controllers/package.py#L917\n\n    // only need to do this test if in resource create mode if editing a\n    // resource this is unnecessary\n    // TODO: update this in future to check for edit mode\n    const isResourceCreate = true;\n    if (isResourceCreate) {\n      const datasetMetadata = await client.action(\"package_show\", {\n        id: this.state.datasetId,\n      });\n      let result = datasetMetadata.result;\n\n      if (result.state === \"draft\") {\n        result.state = \"active\";\n        await client.action(\"package_update\", result);\n      }\n    }\n\n    // Redirect to dataset page\n    return (window.location.href = `/dataset/${this.state.datasetId}`);\n  };\n\n  createResource = async (resource) => {\n    const { client } = this.state;\n    const { config } = this.props;\n    const { organizationId, datasetId, resourceId } = config;\n\n    const ckanResource = frictionlessCkanMapper.resourceFrictionlessToCkan(\n      resource\n    );\n\n    //create a valid format from sample\n    let data = { ...ckanResource.sample };\n    //delete sample because is an invalid format\n    delete ckanResource.sample;\n    //generate an unique id for bq_table_name property\n    let bqTableName = ckanResource.bq_table_name\n      ? ckanResource.bq_table_name\n      : uuidv4();\n    // create a copy from ckanResource to add package_id, name, url, sha256,size, lfs_prefix, url, url_type\n    // without this properties ckan-blob-storage doesn't work properly\n    let ckanResourceCopy = {\n      ...ckanResource,\n      package_id: this.state.datasetId,\n      name: resource.name || resource.title,\n      sha256: resource.hash,\n      size: resource.size,\n      lfs_prefix: `${organizationId}/${datasetId}`,\n      url: resource.name,\n      url_type: \"upload\",\n      bq_table_name: removeHyphen(bqTableName),\n      sample: data,\n    };\n\n    //Check if the user is editing resource, call resource_update and redirect to the dataset page\n    if (resourceId) {\n      ckanResourceCopy = {\n        ...ckanResourceCopy,\n        id: resourceId,\n      };\n      await client.action(\"resource_update\", ckanResourceCopy);\n\n      return (window.location.href = `/dataset/${datasetId}`);\n    }\n    await client\n      .action(\"resource_create\", ckanResourceCopy)\n      .then((response) => {\n        this.onChangeResourceId(response.result.id);\n      });\n  };\n\n  deleteResource = async () => {\n    const { resource, client, datasetId } = this.state;\n    if (window.confirm(\"Are you sure to delete this resource?\")) {\n      await client.action(\"resource_delete\", { id: resource.id });\n\n      return (window.location.href = `/dataset/${datasetId}`);\n    }\n  };\n\n  setLoading = (isLoading) => {\n    this.setState({\n      ui: { ...this.state.ui, loading: isLoading },\n    });\n  };\n\n  handleUploadStatus = (status) => {\n    const { ui } = this.state;\n    const newUiState = {\n      ...ui,\n      success: status.success,\n      error: status.error,\n      loading: status.loading,\n    };\n\n    this.setState({ ui: newUiState });\n  };\n\n  onChangeResourceId = (resourceId) => {\n    this.setState({ resourceId });\n  };\n\n  onSchemaSelected = async (resourceId) => {\n    this.setLoading(true);\n    const { sample, schema } = await this.getSchemaWithSample(resourceId);\n    this.setLoading(false);\n    return this.setState({\n      resource: {\n        ...this.state.resource,\n        schema,\n        sample,\n      },\n    });\n  };\n\n  getSchemaWithSample = async (resourceId) => {\n    const { client } = this.state;\n\n    const resourceSchema = await client.action(\"resource_schema_show\", {\n      id: resourceId,\n    });\n    const resourceSample = await client.action(\"resource_sample_show\", {\n      id: resourceId,\n    });\n\n    const sample = [];\n\n    const schema = resourceSchema.result || { fields: [] };\n\n    try {\n      // push the values to an array\n      for (const property in resourceSample.result) {\n        sample.push(resourceSample.result[property]);\n      }\n    } catch (e) {\n      console.error(e);\n      //generate empty values not to break the tableschema component\n    }\n\n    return { schema, sample };\n  };\n\n  setResource = async (resourceId) => {\n    const { client } = this.state;\n\n    const { result } = await client.action(\"resource_show\", { id: resourceId });\n\n    let resourceCopy = {\n      ...result,\n      ...(await this.getSchemaWithSample(resourceId)),\n    };\n\n    return this.setState({\n      client,\n      resourceId,\n      resource: resourceCopy,\n      isResourceEdit: true,\n    });\n  };\n\n  render() {\n    const { success, loading } = this.state.ui;\n\n    return (\n      <div className=\"App\">\n        <form\n          className=\"upload-wrapper\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            if (this.state.isResourceEdit) {\n              return this.createResource(this.state.resource);\n            }\n            return this.handleSubmitMetadata();\n          }}\n        >\n          <div className=\"upload-header\">\n            <h2 className=\"upload-header__title\">Resource Editor</h2>\n          </div>\n\n          <Upload\n            client={this.state.client}\n            resource={this.state.resource}\n            metadataHandler={this.metadataHandler}\n            datasetId={this.state.datasetId}\n            handleUploadStatus={this.handleUploadStatus}\n            onChangeResourceId={this.onChangeResourceId}\n          />\n\n          <div className=\"upload-edit-area\">\n            <Metadata\n              metadata={this.state.resource}\n              handleChange={this.handleChangeMetadata}\n            />\n            <div className=\"app-form-grid app-divider\">\n              <SelectSchema\n                resources={this.state.resources}\n                onSchemaSelected={this.onSchemaSelected}\n              />\n            </div>\n            {this.state.resource.schema && (\n              <TableSchema\n                schema={this.state.resource.schema}\n                data={this.state.resource.sample || []}\n              />\n            )}\n            {!this.state.isResourceEdit ? (\n              <button disabled={!success || loading} className=\"btn\">\n                Save and Publish\n              </button>\n            ) : (\n              <div className=\"resource-edit-actions\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-delete\"\n                  onClick={this.deleteResource}\n                >\n                  Delete\n                </button>\n                <button className=\"btn\">Update</button>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n/**\n * If the parent component doesn't specify a `config` and scope prop, then\n * the default values will be used.\n * */\nResourceEditor.defaultProps = {\n  config: {\n    authToken: \"be270cae-1c77-4853-b8c1-30b6cf5e9878\",\n    api: \"http://localhost:5000\",\n    lfs: \"http://localhost:5001\", // Feel free to modify this\n    organizationId: \"myorg\",\n    datasetId: \"data-test-2\",\n  },\n};\n\nResourceEditor.propTypes = {\n  config: PropTypes.object.isRequired,\n};\n\nexport default ResourceEditor;\n","const removeHyphen = (id) => {\n  return id.replace(/-/g, \"\");\n};\n\nexport { removeHyphen };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// Automatically mount the app if an element with id='ResourceEditor' exists\nconst element = document.getElementById(\"ResourceEditor\");\nif (element) {\n  const config = {\n    datasetId: element.getAttribute(\"data-dataset-id\"),\n    api: element.getAttribute(\"data-api\"),\n    lfs: element.getAttribute(\"data-lfs\"),\n    authToken: element.getAttribute(\"data-auth-token\"),\n    organizationId: element.getAttribute(\"data-organization-id\"),\n    resourceId: element.getAttribute(\"data-resource-id\"),\n  };\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App config={config} resource={element.getAttribute(\"data-resource\")} />\n    </React.StrictMode>,\n    element\n  );\n}\n"],"sourceRoot":""}