{"version":3,"sources":["../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","components/ProgressBar/index.jsx","utils/index.js","components/Upload/index.jsx","components/SelectSchema/index.js","components/Metadata/index.jsx","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ProgressBar","props","useState","offset","setOffset","circleRef","useRef","size","progress","strokeWidth","circleOneStroke","circleTwoStroke","timeRemaining","center","radius","circumference","Math","PI","useEffect","current","style","className","width","height","stroke","cx","cy","r","ref","strokeDasharray","strokeDashoffset","x","y","floor","onFormatBytes","bytes","decimals","k","dm","sizes","i","log","parseFloat","pow","toFixed","Upload","onChangeHandler","event","a","state","formattedSize","selectedFile","target","files","length","file","data","rows","keyed","rowStream","toArray","descriptor","sample","addSchema","console","warn","hash","metadataHandler","assign","setState","loaded","success","fileExists","error","onClickHandler","onUploadProgress","progressEvent","onTimeRemaining","total","progressLoaded","kbps","Date","getTime","start","fileSize","client","resource","loading","handleUploadStatus","pushBlob","then","response","catch","datasetId","this","onChangeUrl","value","name","round","React","Component","SelectSchema","resources","onSchemaSelected","selectedSchema","setSelectedSchema","onChangeHandlder","resourceId","onChange","index","schema","key","disabled","customFields","label","input_type","values","options","Metadata","metadata","handleChange","path","htmlFor","type","title","description","encoding","required","encodeData","item","format","toLowerCase","formatData","option","ResourceEditor","handleChangeMetadata","resourceCopy","handleSubmitMetadata","createResource","action","datasetMetadata","result","window","location","href","config","organizationId","ckanResource","frictionlessCkanMapper","resourceFrictionlessToCkan","bqTableName","bq_table_name","uuidv4","ckanResourceCopy","package_id","sha256","lfs_prefix","url","url_type","replace","onChangeResourceId","deleteResource","confirm","setLoading","isLoading","ui","status","newUiState","getSchemaWithSample","resourceSchema","resourceSample","fields","property","push","setResource","isResourceEdit","fileOrLink","uploadComplete","undefined","bind","authToken","api","lfs","Client","onSubmit","preventDefault","onClick","defaultProps","element","document","getElementById","getAttribute","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f075abc5.chunk.js","sourcesContent":["var map = {\n\t\"./geojson.json\": 280,\n\t\"./table-schema.json\": 620,\n\t\"./topojson.json\": 281\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 619;","import React, { useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./ProgressBar.css\";\n\nconst ProgressBar = (props) => {\n  const [offset, setOffset] = useState(0);\n  const circleRef = useRef(null);\n  const {\n    size,\n    progress,\n    strokeWidth,\n    circleOneStroke,\n    circleTwoStroke,\n    timeRemaining,\n  } = props;\n\n  const center = size / 2;\n  const radius = size / 2 - strokeWidth / 2;\n  const circumference = 2 * Math.PI * radius;\n\n  useEffect(() => {\n    const progressOffset = ((100 - progress) / 100) * circumference;\n    setOffset(progressOffset);\n\n    circleRef.current.style = \"transition: stroke-dashoffset 850ms ease-in-out\";\n  }, [setOffset, progress, circumference, offset]);\n\n  return (\n    <>\n      <svg className=\"svg\" width={size} height={size}>\n        <circle\n          className=\"svg-circle-bg\"\n          stroke={circleOneStroke}\n          cx={center}\n          cy={center}\n          r={radius}\n          strokeWidth={strokeWidth}\n        />\n        <circle\n          className=\"svg-circle\"\n          ref={circleRef}\n          stroke={circleTwoStroke}\n          cx={center}\n          cy={center}\n          r={radius}\n          strokeWidth={strokeWidth}\n          strokeDasharray={circumference}\n          strokeDashoffset={offset}\n        />\n        <text x={`${center}`} y={`${center + 2}`} className=\"svg-circle-text\">\n          {progress}%\n        </text>\n      </svg>\n      {timeRemaining > 0 &&  <span className=\"time-remaining\">{timeRemaining > 60 ? `${Math.floor(timeRemaining /60)} minute${Math.floor(timeRemaining /60) > 1 ? 's' : ''}` : `${Math.floor(timeRemaining)} second${timeRemaining > 1 ? 's' : ''}`} left</span>}\n    </>\n  );\n};\n\nProgressBar.propTypes = {\n  size: PropTypes.number.isRequired,\n  progress: PropTypes.number.isRequired,\n  strokeWidth: PropTypes.number.isRequired,\n  circleOneStroke: PropTypes.string.isRequired,\n  circleTwoStroke: PropTypes.string.isRequired,\n};\n\nexport default ProgressBar;\n","const onFormatBytes = (bytes, decimals = 1) => {\n  if (bytes === 0) return \"0 Bytes\";\n\n  const k = 1000;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n};\n\nconst removeHyphen = (id) => {\n  return id.replace(/-/g, \"\");\n};\n\nexport { removeHyphen,\n        onFormatBytes };\n","import React from \"react\";\nimport * as data from \"frictionless.js\";\nimport { toArray } from \"stream-to-array\";\nimport ProgressBar from \"../ProgressBar\";\nimport { onFormatBytes } from \"../../utils\";\nimport { Choose } from \"datapub\";\n\nclass Upload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datasetId: props.datasetId,\n      selectedFile: null,\n      fileSize: 0,\n      formattedSize: \"0 KB\",\n      start: \"\",\n      loaded: 0,\n      success: false,\n      error: false,\n      fileExists: false,\n      loading: false,\n      timeRemaining: 0,\n    };\n  }\n\n  onChangeHandler = async (event) => {\n    let { formattedSize, selectedFile } = this.state;\n\n    if (event.target.files.length > 0) {\n      selectedFile = event.target.files[0];\n      const file = data.open(selectedFile);\n      try {\n        const rowStream = await file.rows({ size: 20, keyed: true });\n        file.descriptor.sample = await toArray(rowStream);\n        await file.addSchema();\n      } catch (e) {\n        console.warn(e);\n      }\n      formattedSize = onFormatBytes(file.size);\n      const hash = await file.hash('sha256');\n      this.props.metadataHandler(Object.assign(file.descriptor, { hash }));\n    }\n\n    this.setState({\n      selectedFile,\n      loaded: 0,\n      success: false,\n      fileExists: false,\n      error: false,\n      formattedSize,\n    });\n\n    await this.onClickHandler();\n  };\n\n  onUploadProgress = (progressEvent) => {\n    this.onTimeRemaining(progressEvent.loaded);\n    this.setState({\n      loaded: (progressEvent.loaded / progressEvent.total) * 100,\n    });\n  };\n\n  onTimeRemaining = (progressLoaded) => {\n    const end = new Date().getTime();\n    const duration = (end - this.state.start) / 1000;\n    const bps = progressLoaded / duration;\n    const kbps = bps / 1024;\n    const timeRemaining = (this.state.fileSize - progressLoaded) / kbps;\n\n    this.setState({\n      timeRemaining: timeRemaining / 1000,\n    });\n  };\n\n  onClickHandler = async () => {\n    const start = new Date().getTime();\n    const { selectedFile } = this.state;\n    const { client } = this.props;\n\n    const resource = data.open(selectedFile);\n\n    this.setState({\n      fileSize: resource.size,\n      start,\n      loading: true,\n    });\n\n    this.props.handleUploadStatus({\n      loading: true,\n      error: false,\n      success: false,\n    });\n\n    // Use client to upload file to the storage and track the progress\n    client\n      .pushBlob(resource, this.onUploadProgress)\n      .then((response) => {\n        this.setState({\n          success: true,\n          loading: false,\n          fileExists: ! response,\n          loaded: 100\n        });\n        this.props.handleUploadStatus({\n          loading: false,\n          success: true,\n        });\n      })\n      .catch((error) => {\n        console.error(\"Upload failed with error: \" + error);\n        this.setState({ error: true, loading: false });\n        this.props.handleUploadStatus({\n          loading: false,\n          success: false,\n          error: true,\n        });\n      });\n  };\n\n  render() {\n    const {\n      success,\n      fileExists,\n      error,\n      timeRemaining,\n      selectedFile,\n      formattedSize,\n    } = this.state;\n    return (\n      <div className=\"upload-area\">\n        <Choose\n          onChangeHandler={this.onChangeHandler}\n          onChangeUrl={(event) => console.log(\"Get url:\", event.target.value)}\n        />\n        <div className=\"upload-area__info\">\n          {selectedFile && (\n            <>\n              <ul className=\"upload-list\">\n                <li className=\"list-item\">\n                  <div className=\"upload-list-item\">\n                    <div>\n                      <p className=\"upload-file-name\">{selectedFile.name}</p>\n                      <p className=\"upload-file-size\">{formattedSize}</p>\n                    </div>\n                    <div>\n                      <ProgressBar\n                        progress={Math.round(this.state.loaded)}\n                        size={100}\n                        strokeWidth={5}\n                        circleOneStroke=\"#d9edfe\"\n                        circleTwoStroke={\"#7ea9e1\"}\n                        timeRemaining={timeRemaining}\n                      />\n                    </div>\n                  </div>\n                </li>\n              </ul>\n              <h2 className=\"upload-message\">\n                {success && !fileExists && !error && \"File uploaded successfully\"}\n                {fileExists && \"File uploaded successfully\"}\n                {error && \"Upload failed\"}\n              </h2>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Upload;\n","import React, { useState } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nconst SelectSchema = ({ resources, client, onSchemaSelected }) => {\n  const [selectedSchema, setSelectedSchema] = useState(\"\");\n\n  const onChangeHandlder = async (event) => {\n    const resourceId = event.target.value;\n    setSelectedSchema(event.target.value);\n    onSchemaSelected(resourceId);\n  };\n  return (\n    <div className=\"app-form-field\">\n      <label className=\"metadata-label\">\n        Copy metadata information from existing resource\n      </label>\n      <select\n        className=\"app-form-field-input\"\n        value={selectedSchema}\n        onChange={onChangeHandlder}\n      >\n        <option value=\"\">Select...</option>\n        {resources.map(({ name, schema, id }, index) => {\n          return (\n            <option\n              key={`select-schema-option-${id}-${index}`}\n              value={id}\n              disabled={!schema}\n            >\n              {name} {!schema ? \"(no schema to copy)\" : \"\"}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nSelectSchema.propTypes = {\n  resources: PropTypes.array.isRequired,\n  onSchemaSelected: PropTypes.func.isRequired,\n};\n\nexport default SelectSchema;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Metadata.css\";\nimport { encodeData, formatData } from \"datapub\";\n\n//TODO: add the custom fields as a props and render it in metadata component\nconst customFields = [\n  {\n    label: \"Access Restriction\",\n    name: \"restricted\",\n    input_type: \"select\",\n    values: ['{\"level\": \"public\"}', '{\"level\": \"private\"}'],\n    options: [\"Public\", \"Private\"],\n  },\n];\n\nconst Metadata = ({ metadata, handleChange }) => {\n  return (\n    <>\n      <h3 className=\"metadata-name\">{metadata.path}</h3>\n      <div className=\"metadata-form\">\n        <div className=\"metadata-input\">\n          <label className=\"metadata-label\" htmlFor=\"title\">\n            Title\n          </label>\n          <input\n            className=\"metadata-input__input\"\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            value={metadata.title || metadata.name}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"metadata-input\">\n          <label className=\"metadata-label\" htmlFor=\"description\">\n            Description\n          </label>\n          <input\n            className=\"metadata-input__input\"\n            type=\"text\"\n            name=\"description\"\n            id=\"description\"\n            value={metadata.description || \"\"}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"metadata-input\">\n          <label className=\"metadata-label\" htmlFor=\"encoding\">\n            Encoding\n          </label>\n          <select\n            className=\"metadata-input__input\"\n            name=\"encoding\"\n            id=\"encoding\"\n            value={metadata.encoding || \"\"}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\" disabled>\n              Select...\n            </option>\n            {encodeData.map((item) => (\n              <option key={`format-${item.value}`} value={item.value}>\n                {item.label}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"metadata-input\">\n          <label className=\"metadata-label\" htmlFor=\"format\">\n            Format\n          </label>\n          <select\n            className=\"metadata-input__input\"\n            name=\"format\"\n            id=\"format\"\n            value={(metadata.format || \"\").toLowerCase()}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\" disabled>\n              Select...\n            </option>\n            {formatData.map((item) => (\n              <option key={`format-${item[0]}`} value={item[0].toLowerCase()}>\n                {item[0]}\n              </option>\n            ))}\n          </select>\n        </div>\n        {customFields &&\n          customFields.map((item) => (\n            <div\n              key={`metadata-custom-${item.name}`}\n              className=\"metadata-input\"\n            >\n              <label className=\"metadata-label\" htmlFor=\"format\">\n                {item.label}\n              </label>\n              <select\n                className=\"metadata-input__input\"\n                name={item.name}\n                id={item.name}\n                value={metadata[item.name] || \"\"}\n                onChange={handleChange}\n                required\n              >\n                <option value=\"\" disabled>\n                  Select...\n                </option>\n                {item.options.map((option, index) => (\n                  <option\n                    key={`${item.name}-${index}`}\n                    value={item.values[index]}\n                  >\n                    {option}\n                  </option>\n                ))}\n              </select>\n            </div>\n          ))}\n      </div>\n    </>\n  );\n};\n\nMetadata.propTypes = {\n  metadata: PropTypes.object.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Metadata;\n","import React from \"react\";\nimport { Client } from \"ckanClient\";\nimport PropTypes from \"prop-types\";\nimport frictionlessCkanMapper from \"frictionless-ckan-mapper-js\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { TableSchema } from \"datapub\";\nimport Upload from \"./components/Upload\";\nimport SelectSchema from \"./components/SelectSchema\";\nimport Metadata from \"./components/Metadata\";\nimport \"./App.css\";\nimport { removeHyphen } from \"./utils\";\n\nexport class ResourceEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resources: [],\n      datasetId: this.props.config.datasetId,\n      resourceId: \"\",\n      resource: this.props.resource || {},\n      ui: {\n        fileOrLink: \"\",\n        uploadComplete: undefined,\n        success: false,\n        error: false,\n        loading: false,\n      },\n      client: null,\n      isResourceEdit: false,\n    };\n    this.metadataHandler = this.metadataHandler.bind(this);\n  }\n\n  async componentDidMount() {\n    const { config } = this.props;\n    const {\n      authToken,\n      api,\n      lfs,\n      organizationId,\n      datasetId,\n      resourceId,\n    } = config;\n\n    const client = new Client(\n      `${authToken}`,\n      `${organizationId}`,\n      `${datasetId}`,\n      `${api}`,\n      `${lfs}`\n    );\n\n    // get dataset\n    const { result } = await client.action(\"package_show\", {\n      id: datasetId,\n    });\n\n    const resources = result.resources || [];\n\n    this.setState({ client, resources });\n\n    //Check if the user is editing resource\n    if (resourceId) {\n      this.setResource(resourceId);\n    }\n  }\n\n  metadataHandler(resource) {\n    this.setState({\n      resource,\n    });\n  }\n\n  handleChangeMetadata = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let resourceCopy = this.state.resource;\n    resourceCopy[name] = value;\n\n    this.setState({\n      resource: resourceCopy,\n    });\n  };\n\n  handleSubmitMetadata = async () => {\n    const { resource, client } = this.state;\n\n    await this.createResource(resource);\n\n    // Change state of dataset to active if draft atm\n    // this relates to how CKAN v2 has a phased dataset creation. See e.g.\n    // https://github.com/ckan/ckan/blob/master/ckan/controllers/package.py#L917\n\n    // only need to do this test if in resource create mode if editing a\n    // resource this is unnecessary\n    // TODO: update this in future to check for edit mode\n    const isResourceCreate = true;\n    if (isResourceCreate) {\n      const datasetMetadata = await client.action(\"package_show\", {\n        id: this.state.datasetId,\n      });\n      let result = datasetMetadata.result;\n\n      if (result.state === \"draft\") {\n        result.state = \"active\";\n        await client.action(\"package_update\", result);\n      }\n    }\n\n    // Redirect to dataset page\n    return (window.location.href = `/dataset/${this.state.datasetId}`);\n  };\n\n  createResource = async (resource) => {\n    const { client } = this.state;\n    const { config } = this.props;\n    const { organizationId, datasetId, resourceId } = config;\n\n    const ckanResource = frictionlessCkanMapper.resourceFrictionlessToCkan(\n      resource\n    );\n\n    //create a valid format from sample\n    let data = { ...ckanResource.sample };\n    //delete sample because is an invalid format\n    delete ckanResource.sample;\n    //generate an unique id for bq_table_name property\n    let bqTableName = ckanResource.bq_table_name\n      ? ckanResource.bq_table_name\n      : uuidv4();\n    // create a copy from ckanResource to add package_id, name, url, sha256,size, lfs_prefix, url, url_type\n    // without this properties ckan-blob-storage doesn't work properly\n    let ckanResourceCopy = {\n      ...ckanResource,\n      package_id: this.state.datasetId,\n      name: resource.name || resource.title,\n      sha256: resource.hash,\n      size: resource.size,\n      lfs_prefix: `${organizationId}/${datasetId}`,\n      url: resource.name,\n      url_type: \"upload\",\n      bq_table_name: removeHyphen(bqTableName),\n      sample: data,\n    };\n\n    //Check if the user is editing resource, call resource_update and redirect to the dataset page\n    if (resourceId) {\n      ckanResourceCopy = {\n        ...ckanResourceCopy,\n        id: resourceId,\n      };\n      await client.action(\"resource_update\", ckanResourceCopy);\n\n      return (window.location.href = `/dataset/${datasetId}`);\n    }\n    await client\n      .action(\"resource_create\", ckanResourceCopy)\n      .then((response) => {\n        this.onChangeResourceId(response.result.id);\n      });\n  };\n\n  deleteResource = async () => {\n    const { resource, client, datasetId } = this.state;\n    if (window.confirm(\"Are you sure to delete this resource?\")) {\n      await client.action(\"resource_delete\", { id: resource.id });\n\n      return (window.location.href = `/dataset/${datasetId}`);\n    }\n  };\n\n  setLoading = (isLoading) => {\n    this.setState({\n      ui: { ...this.state.ui, loading: isLoading },\n    });\n  };\n\n  handleUploadStatus = (status) => {\n    const { ui } = this.state;\n    const newUiState = {\n      ...ui,\n      success: status.success,\n      error: status.error,\n      loading: status.loading,\n    };\n\n    this.setState({ ui: newUiState });\n  };\n\n  onChangeResourceId = (resourceId) => {\n    this.setState({ resourceId });\n  };\n\n  onSchemaSelected = async (resourceId) => {\n    this.setLoading(true);\n    const { sample, schema } = await this.getSchemaWithSample(resourceId);\n    this.setLoading(false);\n\n    this.setState({\n      resource: Object.assign(this.state.resource, { schema, sample }),\n    });\n  };\n\n  getSchemaWithSample = async (resourceId) => {\n    const { client } = this.state;\n\n    const resourceSchema = await client.action(\"resource_schema_show\", {\n      id: resourceId,\n    });\n    const resourceSample = await client.action(\"resource_sample_show\", {\n      id: resourceId,\n    });\n\n    const sample = [];\n\n    const schema = resourceSchema.result || { fields: [] };\n\n    try {\n      // push the values to an array\n      for (const property in resourceSample.result) {\n        sample.push(resourceSample.result[property]);\n      }\n    } catch (e) {\n      console.error(e);\n      //generate empty values not to break the tableschema component\n    }\n\n    return { schema, sample };\n  };\n\n  setResource = async (resourceId) => {\n    const { client } = this.state;\n\n    const { result } = await client.action(\"resource_show\", { id: resourceId });\n\n    let resourceCopy = {\n      ...result,\n      ...(await this.getSchemaWithSample(resourceId)),\n    };\n\n    return this.setState({\n      client,\n      resourceId,\n      resource: resourceCopy,\n      isResourceEdit: true,\n    });\n  };\n\n  render() {\n    const { success, loading } = this.state.ui;\n\n    return (\n      <div className=\"App\">\n        <form\n          className=\"upload-wrapper\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            if (this.state.isResourceEdit) {\n              return this.createResource(this.state.resource);\n            }\n            return this.handleSubmitMetadata();\n          }}\n        >\n          <div className=\"upload-header\">\n            <h2 className=\"upload-header__title\">Resource Editor</h2>\n          </div>\n\n          <Upload\n            client={this.state.client}\n            resource={this.state.resource}\n            metadataHandler={this.metadataHandler}\n            datasetId={this.state.datasetId}\n            handleUploadStatus={this.handleUploadStatus}\n            onChangeResourceId={this.onChangeResourceId}\n          />\n\n          <div className=\"upload-edit-area\">\n            <Metadata\n              metadata={this.state.resource}\n              handleChange={this.handleChangeMetadata}\n            />\n            <div className=\"app-form-grid app-divider\">\n              <SelectSchema\n                resources={this.state.resources}\n                onSchemaSelected={this.onSchemaSelected}\n              />\n            </div>\n            {this.state.resource.schema && (\n              <TableSchema\n                schema={this.state.resource.schema}\n                data={this.state.resource.sample || []}\n              />\n            )}\n            {!this.state.isResourceEdit ? (\n              <button disabled={!success || loading} className=\"btn\">\n                Save and Publish\n              </button>\n            ) : (\n              <div className=\"resource-edit-actions\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-delete\"\n                  onClick={this.deleteResource}\n                >\n                  Delete\n                </button>\n                <button className=\"btn\">Update</button>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n/**\n * If the parent component doesn't specify a `config` and scope prop, then\n * the default values will be used.\n * */\nResourceEditor.defaultProps = {\n  config: {\n    authToken: \"be270cae-1c77-4853-b8c1-30b6cf5e9878\",\n    api: \"http://localhost:5000\",\n    lfs: \"http://localhost:5001\", // Feel free to modify this\n    organizationId: \"myorg\",\n    datasetId: \"data-test-2\",\n  },\n};\n\nResourceEditor.propTypes = {\n  config: PropTypes.object.isRequired,\n};\n\nexport default ResourceEditor;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// Automatically mount the app if an element with id='ResourceEditor' exists\nconst element = document.getElementById(\"ResourceEditor\");\nif (element) {\n  const config = {\n    datasetId: element.getAttribute(\"data-dataset-id\"),\n    api: element.getAttribute(\"data-api\"),\n    lfs: element.getAttribute(\"data-lfs\"),\n    authToken: element.getAttribute(\"data-auth-token\"),\n    organizationId: element.getAttribute(\"data-organization-id\"),\n    resourceId: element.getAttribute(\"data-resource-id\"),\n  };\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App config={config} resource={element.getAttribute(\"data-resource\")} />\n    </React.StrictMode>,\n    element\n  );\n}\n"],"sourceRoot":""}